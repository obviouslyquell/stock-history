* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
:root {
  /* generic */
  --gutterSm: 0.4rem;
  --gutterMd: 0.8rem;
  --gutterLg: 1.6rem;
  --gutterXl: 2.4rem;
  --gutterXx: 7.2rem;
  --colorPrimary400: #7e57c2;
  --colorPrimary600: #5e35b1;
  --colorPrimary800: #4527a0;
  --fontFamily: 'Dosis', sans-serif;
  --fontSizeSm: 1.2rem;
  --fontSizeMd: 1.6rem;
  --fontSizeLg: 2.1rem;
  --fontSizeXl: 2.8rem;
  --fontSizeXx: 3.6rem;
  --lineHeightSm: 1.1;
  --lineHeightMd: 1.8;
  --transitionDuration: 300ms;
  --transitionTF: cubic-bezier(0.645, 0.045, 0.355, 1);

  /* floated labels */
  --inputPaddingV: var(--gutterMd);
  --inputPaddingH: var(--gutterLg);
  --inputFontSize: var(--fontSizeMd);
  --inputLineHeight: var(--lineHeightMd);
  --labelScaleFactor: 0.8;
  --labelDefaultPosY: 50%;
  --labelTransformedPosY: calc(
    (var(--labelDefaultPosY)) - (var(--inputPaddingV) * var(--labelScaleFactor)) -
      (var(--inputFontSize) * var(--inputLineHeight))
  );
  --inputTransitionDuration: var(--transitionDuration);
  --inputTransitionTF: var(--transitionTF);
}

$toggle-indicator-size: 24px; // changing this number will resize the whole toggle
$track-height: $toggle-indicator-size + 6;
$track-width: $toggle-indicator-size * 2.5;
$highContrastModeSupport: solid 2px transparent;
$speed: 0.3s;
$gray: gray;
$dark: black;
$light: #212121;
$mid: white;
$track-border: $mid;
$track-background: $light;
$focus-ring: 0px 0px 0px 2px $mid;

.App {
  display: flex;
  flex-direction: column;

  &__hint {
    color: white;
  }
}
body {
  background-color: #212121;
}
.box-shadow {
  box-shadow: 0.2rem 0.8rem 1.6rem var(--colorPrimary600);
  transition: box-shadow var(--transitionDuration);
}
.loading {
  background-color: var(--colorPrimary400) !important;
  padding-right: 30px;
  color: white;
  &::after {
    opacity: 1 !important;
    display: inline-block;
    animation: spin 1s ease-in-out infinite;
    -webkit-animation: spin 1s ease-in-out infinite;
  }
}
.header {
  padding: 2rem;
  .checkbox__label {
    color: white;
    font-size: 20px;
  }
  .toggle {
    align-items: center;
    border-radius: 100px;
    display: flex;
    font-weight: 700;
    font-size: 20px;
    margin-bottom: 30px;
    color: $mid;
  }
  // Since we can't style the checkbox directly, we "hide" it so we can draw the toggle.
  .toggle__input {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;

    // This style sets the focus ring. The ":not([disabled])" prevents the focus ring from creating a flash when the element is clicked.
    &:not([disabled]):active + .toggle-track,
    &:not([disabled]):focus + .toggle-track {
      border: 1px solid transparent;
      box-shadow: $focus-ring;
    }

    &:disabled + .toggle-track {
      cursor: not-allowed;
      opacity: 0.7;
    }
  }

  .toggle-track {
    background: $track-background;
    border: 1px solid $track-border;
    border-radius: 100px;
    cursor: pointer;
    display: flex;
    height: $track-height;
    margin-right: 12px;
    position: relative;
    width: $track-width;
  }

  .toggle-indicator {
    align-items: center;
    background: $gray;
    border-radius: $toggle-indicator-size;
    bottom: 2px;
    display: flex;
    height: $toggle-indicator-size;
    justify-content: center;
    left: 3px;
    outline: $highContrastModeSupport;
    position: absolute;
    transition: $speed;
    width: $toggle-indicator-size;
  }

  // The check mark is optional
  .checkMark {
    fill: #fff;
    height: $toggle-indicator-size - 4;
    width: $toggle-indicator-size - 4;
    opacity: 0;
    transition: opacity $speed ease-in-out;
  }

  .toggle__input:checked + .toggle-track .toggle-indicator {
    background: $gray;
    transform: translateX($track-width - $track-height);

    .checkMark {
      opacity: 1;
      transition: opacity $speed ease-in-out;
    }
  }

  @media screen and (-ms-high-contrast: active) {
    .toggle-track {
      border-radius: 0;
    }
  }
}
.header__form {
  display: flex;
  justify-content: center;
  margin: 0px auto;
  transition: 0.3s linear all;
  position: relative;
  .select {
    border: none;
    cursor: pointer;
    overflow: hidden;
    position: relative;
    width: 10%;

    select {
      width: 100%;
      height: 100%;
      border: none;
      cursor: pointer;
      -webkit-appearance: none;
      text-align: center;
      &:focus {
        outline: none;
      }
    }
    .desc {
      position: absolute;
      bottom: 0px;
      right: 12px;
      font-size: 24px;

      &::before {
        content: '';
        border-top: 8px solid #ccc;
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
      }
    }
  }

  &-btn {
    width: 10%;
    cursor: pointer;
    background-color: white;
    border-radius: 0 0.4rem 0.4rem 0;
    border: none;
    font-size: 20px;
    position: relative;
    transition: all 0.5s ease-in-out;
  }
  &-btn:hover {
    background-color: var(--colorPrimary400);
    color: white;
    padding-right: 30px;
  }
  &-btn:hover::after {
    opacity: 1;
    transition: all 1s;
  }
  &-btn::after {
    content: '';
    background: url('img/right-arrow.svg');
    width: 10px;
    height: 10px;
    position: absolute;
    margin-left: 10px;
    top: 30px;
    opacity: 0;
  }
}
.container {
  width: 90%;
  margin: 0 auto;
}
.graph__ticket {
  color: #fff;
}
.tooltip {
  border-radius: 0.25rem;
  background-color: #8a86db96;
  color: black;
  padding-inline: 1rem;
  padding-block: 0.3rem;
  text-align: center;
}

.input-text {
  display: block;
  margin: 0;
  padding: var(--inputPaddingV) var(--inputPaddingH);
  color: inherit;
  width: 80%;
  font-family: inherit;
  font-size: var(--inputFontSize);
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  border: none;
  border-radius: 0.4rem 0 0 0.4rem;
  transition: box-shadow var(--transitionDuration);
}

.input-text::placeholder {
  color: #b0bec5;
}

.input-text:focus {
  outline: none;
}
.input-text:focus > .header__form {
  box-shadow: 0.2rem 0.8rem 1.6rem var(--colorPrimary600);
}

.input-label {
  display: block;
  position: absolute;
  left: 1rem;
  color: #fff;
  font-family: inherit;
  font-size: var(--inputFontSize);
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  opacity: 0;
  transform: translate3d(0, var(--labelDefaultPosY), 0) scale(1);
  transform-origin: 0 0;
  transition: opacity var(--inputTransitionDuration) var(--inputTransitionTF),
    transform var(--inputTransitionDuration) var(--inputTransitionTF),
    visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
    z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF);
}

.input-text:placeholder-shown + .input-label {
  visibility: hidden;
  z-index: -1;
}

.input-text:not(:placeholder-shown) + .input-label,
.input-text:focus:not(:placeholder-shown) + .input-label {
  visibility: visible;
  z-index: 1;
  opacity: 1;
  transform: translate3d(0, var(--labelTransformedPosY), 0) scale(var(--labelScaleFactor));
  transition: transform var(--inputTransitionDuration), visibility 0ms, z-index 0ms;
}

.search__container {
  color: black;
  background-color: white;
  padding: 2px;
  z-index: 2;
  display: flex;
  justify-content: space-between;
}

@keyframes spin {
  to {
    -webkit-transform: rotate(360deg);
  }
}
@-webkit-keyframes spin {
  to {
    -webkit-transform: rotate(360deg);
  }
}

@media screen and (max-width: 500px) {
  .header__form {
    flex-direction: column;
    align-items: center;

    .input-text {
      border-radius: 0.4rem 0.4rem 0 0;
      width: 100%;
    }
    .input-label {
      top: 0px;
    }
    &-btn {
      border-radius: 0 0 0.4rem 0.4rem;
      width: 100%;
      height: 40px;
    }
    &-btn::after {
      top: 14px;
    }

    .select {
      height: 30px;
      width: 100%;
      border-block: 1px solid #ccc;
      select {
        padding: 0 !important;
        text-align: center;
      }
    }
  }
}

@media screen and (max-width: 950px) {
  .desc {
    display: none;
  }
}
